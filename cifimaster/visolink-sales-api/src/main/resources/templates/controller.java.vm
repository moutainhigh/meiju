package ${package.Controller};

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
    #if(${restControllerStyle})
    import org.springframework.web.bind.annotation.RequestMethod;
    import org.springframework.web.bind.annotation.RestController;
    #else
    import org.springframework.stereotype.Controller;
    #end
    #if(${superControllerClassPackage})
    import ${superControllerClassPackage};
    #end
import ${package.Service}.${table.serviceName};
import ${cfg.voPackage}.vo.${entity}VO;
import ${cfg.voPackage}.form.${entity}Form;
import com.baomidou.mybatisplus.core.metadata.IPage;
import java.util.List;

import cn.visolink.logs.aop.log.Log;
import io.cess.core.spring.CessBody;
import io.swagger.annotations.Api;
import io.swagger.annotations.ApiOperation;
import org.springframework.web.bind.annotation.PostMapping;

/**
 * <p>
 * ${entity}前端控制器
 * </p>
 *
 * @author ${author}
 * @since ${date}
 */
#if(${restControllerStyle})
@RestController
#else
@Controller
#end
@Api(tags = "${entity}")
@RequestMapping("#if(${package.ModuleName})/${package.ModuleName}#end/#if(${controllerMappingHyphenStyle})${controllerMappingHyphen}#else${table.entityPath}#end")
#if(${kotlin})
class ${table.controllerName}#if(${superControllerClass}) : ${superControllerClass}()#end

#else
    #if(${superControllerClass})
public class ${table.controllerName} extends ${superControllerClass} {
    #else
public class ${table.controllerName} {
    #end

@Autowired
public ${table.serviceName} ${table.entityPath}Service;

    /**
    * 保存单条
    * @param param 保存参数
    * @return 是否添加成功
    */
    @Log("保存数据到${entity}")
    @CessBody
    @ApiOperation(value = "保存", notes = "保存数据到${entity}")
    @PostMapping(value = "/add.action")
    public Integer add${entity}(@RequestBody(required = false) ${entity}Form param){
            Integer result= ${table.entityPath}Service.save(param);
            return result;
            }

    /**
    * 更新(根据主键id更新)
    * @param param 修改参数
    * @return 是否更改成功
    */

    @Log("更新(根据主键id更新)${entity}")
    @CessBody
    @ApiOperation(value = "更新数据", notes = "根据主键id更新${entity}数据")
    @PostMapping(value = "/updateById.action")
    public Integer update${entity}ById(@RequestBody(required = false) ${entity}Form param){
            Integer result= ${table.entityPath}Service.updateById(param);
            return result;
            }

    /**
    * 删除(根据主键id伪删除)
    * @param id 主键id
    * @return 是否删除成功
    */

    @Log("删除(根据主键id伪删除)${entity}")
    @CessBody
    @ApiOperation(value = "删除数据", notes = "根据主键id伪删除${entity}数据")
    @PostMapping(value = "/deleteById.action")
    public Integer delete${entity}ById(String id){
            Integer result= ${table.entityPath}Service.deleteById(id);
            return result;
            }

    /**
    * 根据主键id查询单条
    * @param id 主键id
    * @return 查询结果
    */

    @Log("根据主键id查询单条${entity}")
    @CessBody
    @ApiOperation(value = "获取单条数据", notes = "根据主键id获取${entity}数据")
    @RequestMapping(value = "/getById.action", method = RequestMethod.POST)
    public ${entity}VO get${entity}ById(@RequestBody(required = false) String id){
        ${entity}VO result= ${table.entityPath}Service.selectById(id);
            return result;
            }

    /**
    * 查询全部
    * @param param 查询条件
    * @return 查询结果
    */

    @Log("查询全部${entity}")
    @CessBody
    @ApiOperation(value = "全部查询", notes = "查询${entity}全部数据")
    @RequestMapping(value = "/queryAll.action", method = RequestMethod.POST)
    public List<${entity}VO> get${entity}All(@RequestBody(required = false) ${entity}Form param){
            List<${entity}VO> result= ${table.entityPath}Service.selectAll(param);
            return result;
            }

    /**
    * 分页查询
    * @param param 查询条件
    * @return 查询结果
    */

    @Log("分页查询${entity}")
    @CessBody
    @ApiOperation(value = "分页查询", notes = "分页查询${entity}全部数据")
    @RequestMapping(value = "/queryPage.action", method = RequestMethod.POST)
    public IPage<${entity}VO> get${entity}Page(@RequestBody(required = false) ${entity}Form param){
            IPage<${entity}VO> result= ${table.entityPath}Service.selectPage(param);
            return result;
            }

            }

    #end