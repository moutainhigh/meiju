<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cn.visolink.firstplan.buildbigprice.dao.BuildBigPriceDao">
    <select id="getProjectStagesData" resultType="java.util.Map" parameterType="java.lang.String">
SELECT
projectFID,
CONCAT(projectName,'(',StageName,')') StageName
FROM
	t_mm_group
WHERE
	projectID in(
select fpr.project_id from  fp_project_relationship fpr,
(SELECT ID FROM fp_project_relationship WHERE project_id=#{project_id} ) PID
WHERE
 (fpr.id=PID.ID or  fpr.pid=PID.ID )
	)
GROUP BY
	projectFID
    </select>
	<select id="getProductDataaByProjectFid" resultType="java.util.Map" parameterType="java.lang.String">
SELECT
	productCode,
	productName
FROM
	t_mm_group
WHERE
	projectFID = #{projectFID}
	AND isDelete &lt;&gt;1
GROUP BY
	productCode
	</select>
	<select id="getBuildData" resultType="java.util.Map" parameterType="java.util.Map">
SELECT
	bldPrdID,
	buildingName,
	productCode,
	productType
FROM
	t_mm_designbuild
WHERE
	 projectFID = #{projectFID}
GROUP BY bldPrdID
ORDER BY buildingName

	</select>

	<delete id="clearAllThisVersionData" parameterType="java.lang.String">
		DELETE FROM fp_designtwo_big_price WHERE plan_node_id=#{id}
	</delete>
	<insert id="insertBuildData" parameterType="java.util.Map">
		<!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
          This element was generated on Fri Mar 20 16:55:53 CST 2020.
        -->
		insert into fp_designtwo_big_price
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="id != null">
				id,
			</if>
			<if test="plan_id != null">
				plan_id,
			</if>
			<if test="plan_node_id != null">
				plan_node_id,
			</if>
			<if test="operation_type_code != null">
				operation_type_code,
			</if>
			<if test="operation_type != null">
				operation_type,
			</if>
			<if test="product_type_code != null">
				product_type_code,
			</if>
			<if test="product_type != null">
				product_type,
			</if>
			<if test="building_id != null">
				building_id,
			</if>
			<if test="building_name != null">
				building_name,
			</if>
			<if test="project_id != null">
				project_id,
			</if>
			<if test="project_name != null">
				project_name,
			</if>
			<if test="public_code != null">
				public_code,
			</if>
			<if test="level_coefficient != null">
				level_coefficient,
			</if>
			<if test="operation_coefficient != null">
				operation_coefficient,
			</if>
			<if test="static_coefficient != null">
				static_coefficient,
			</if>
			<if test="product_price != null">
				product_price,
			</if>
			<if test="static_price != null">
				static_price,
			</if>
			<if test="open_time != null">
				open_time,
			</if>
			<if test="def_week != null">
				def_week,
			</if>
			<if test="this_pric_week_correction != null">
				this_pric_week_correction,
			</if>
			<if test="this_building_area != null">
				this_building_area,
			</if>
			<if test="this_building_avg != null">
				this_building_avg,
			</if>
			<if test="this_building_raw_avg != null">
				this_building_raw_avg,
			</if>
			<if test="this_pric_value != null">
				this_pric_value,
			</if>
			<if test="this_pric_raw_value != null">
				this_pric_raw_value,
			</if>
			<if test="this_pric_back_raw_avg != null">
				this_pric_back_raw_avg,
			</if>
			<if test="this_pric_back_raw_value != null">
				this_pric_back_raw_value,
			</if>
			<if test="task_kingdee_sell_area != null">
				task_kingdee_sell_area,
			</if>
			<if test="task_kingdee_sell_avg != null">
				task_kingdee_sell_avg,
			</if>
			<if test="task_kingdee_sell_value != null">
				task_kingdee_sell_value,
			</if>
			<if test="task_kingdee_not_avg != null">
				task_kingdee_not_avg,
			</if>
			<if test="task_kingdee_not_value != null">
				task_kingdee_not_value,
			</if>
			<if test="task_kingdee_not_area != null">
				task_kingdee_not_area,
			</if>
			<if test="task_kingdee_dynamic_avg != null">
				task_kingdee_dynamic_avg,
			</if>
			<if test="task_kingdee_dynamic_value != null">
				task_kingdee_dynamic_value,
			</if>
			<if test="task_kingdee_dynamic_sell != null">
				task_kingdee_dynamic_sell,
			</if>
			<if test="task_kingdee_not_are != null">
				task_kingdee_not_are,
			</if>
			<if test="this_pric_build_avgprice != null">
				this_pric_build_avgprice,
			</if>
				create_time,
			<if test="sort != null">
				sort,
			</if>
			<if test="isSave != null">
				isSave,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="id != null">
				#{id,jdbcType=VARCHAR},
			</if>
			<if test="plan_id != null">
				#{plan_id,jdbcType=VARCHAR},
			</if>
			<if test="plan_node_id != null">
				#{plan_node_id,jdbcType=VARCHAR},
			</if>
			<if test="operation_type_code != null">
				#{operation_type_code,jdbcType=VARCHAR},
			</if>
			<if test="operation_type != null">
				#{operation_type,jdbcType=VARCHAR},
			</if>
			<if test="product_type_code != null">
				#{product_type_code,jdbcType=VARCHAR},
			</if>
			<if test="product_type != null">
				#{product_type,jdbcType=VARCHAR},
			</if>
			<if test="building_id != null">
				#{building_id,jdbcType=VARCHAR},
			</if>
			<if test="building_name != null">
				#{building_name,jdbcType=VARCHAR},
			</if>
			<if test="project_id != null">
				#{project_id,jdbcType=VARCHAR},
			</if>
			<if test="project_name != null">
				#{project_name,jdbcType=VARCHAR},
			</if>
			<if test="public_code != null">
				#{public_code,jdbcType=VARCHAR},
			</if>
			<if test="level_coefficient != null">
				#{level_coefficient,jdbcType=DECIMAL},
			</if>
			<if test="operation_coefficient != null">
				#{operation_coefficient,jdbcType=DECIMAL},
			</if>
			<if test="static_coefficient != null">
				#{static_coefficient,jdbcType=DECIMAL},
			</if>
			<if test="product_price != null">
				#{product_price,jdbcType=DECIMAL},
			</if>
			<if test="static_price != null">
				#{static_price,jdbcType=DECIMAL},
			</if>
			<if test="open_time != null">
				#{open_time,jdbcType=TIMESTAMP},
			</if>
			<if test="def_week != null">
				#{def_week,jdbcType=DECIMAL},
			</if>
			<if test="this_pric_week_correction != null">
				#{this_pric_week_correction,jdbcType=DECIMAL},
			</if>
			<if test="this_building_area != null">
				#{this_building_area,jdbcType=DECIMAL},
			</if>
			<if test="this_building_avg != null">
				#{this_building_avg,jdbcType=DECIMAL},
			</if>
			<if test="this_building_raw_avg != null">
				#{this_building_raw_avg,jdbcType=DECIMAL},
			</if>
			<if test="this_pric_value != null">
				#{this_pric_value,jdbcType=DECIMAL},
			</if>
			<if test="this_pric_raw_value != null">
				#{this_pric_raw_value,jdbcType=DECIMAL},
			</if>
			<if test="this_pric_back_raw_avg != null">
				#{this_pric_back_raw_avg,jdbcType=DECIMAL},
			</if>
			<if test="this_pric_back_raw_value != null">
				#{this_pric_back_raw_value,jdbcType=DECIMAL},
			</if>
			<if test="task_kingdee_sell_area != null">
				#{task_kingdee_sell_area,jdbcType=DECIMAL},
			</if>
			<if test="task_kingdee_sell_avg != null">
				#{task_kingdee_sell_avg,jdbcType=DECIMAL},
			</if>
			<if test="task_kingdee_sell_value != null">
				#{task_kingdee_sell_value,jdbcType=DECIMAL},
			</if>
			<if test="task_kingdee_not_avg != null">
				#{task_kingdee_not_avg,jdbcType=DECIMAL},
			</if>
			<if test="task_kingdee_not_value != null">
				#{task_kingdee_not_value,jdbcType=DECIMAL},
			</if>
			<if test="task_kingdee_not_area != null">
				#{task_kingdee_not_area,jdbcType=DECIMAL},
			</if>
			<if test="task_kingdee_dynamic_avg != null">
				#{task_kingdee_dynamic_avg,jdbcType=DECIMAL},
			</if>
			<if test="task_kingdee_dynamic_value != null">
				#{task_kingdee_dynamic_value,jdbcType=DECIMAL},
			</if>
			<if test="task_kingdee_dynamic_sell != null">
				#{task_kingdee_dynamic_sell,jdbcType=DECIMAL},
			</if>
			<if test="task_kingdee_not_are != null">
				#{task_kingdee_not_are,jdbcType=DECIMAL},
			</if>
			<if test="this_pric_build_avgprice != null">
				#{this_pric_build_avgprice},
			</if>
			now(),
			<if test="sort != null">
				#{sort},
			</if>
			<if test="isSave != null">
				#{isSave},
			</if>
		</trim>
	</insert>

	<select id="getBuilldBigPriceData" resultType="java.util.Map" parameterType="java.lang.String">
SELECT
	id,
	project_name,
	product_type,
	operation_type,
	building_name,
	level_coefficient,
	operation_coefficient,
	static_coefficient,
	product_price,
	static_price,
	DATE_FORMAT( open_time, '%Y-%m-%d' ) open_time,
	def_week,
	this_building_avg,
	this_pric_week_correction,
	this_building_area,
	this_pric_build_avgprice,
	this_building_raw_avg,
	this_pric_value,
	this_pric_raw_value,
	this_pric_back_raw_value,
	this_pric_back_raw_avg,
	task_kingdee_sell_area,
	task_kingdee_sell_avg,
	task_kingdee_sell_value,
	task_kingdee_not_are,
	task_kingdee_not_avg,
	task_kingdee_not_value,
	task_kingdee_not_area,
	task_kingdee_dynamic_avg,
	task_kingdee_dynamic_value,
	task_kingdee_dynamic_sell,
	sort
FROM
	fp_designtwo_big_price
WHERE
	plan_node_id =#{plan_node_id} and isSave=1
ORDER BY
	Sort ASC
	</select>
	<select id="getBuildInfo" resultType="java.util.Map" parameterType="java.lang.String">
SELECT
tg.projectName,
tg.stageName,
	tb.productCode,
	tb.productType,
	tb.bldPrdID,
	tb.buildingName
FROM
	t_mm_designbuild tb
	INNER JOIN t_mm_group tg ON tb.designBuildID = tg.designBuildID
	AND tb.productCode = tg.productCode
	AND tb.bldPrdID=#{buildId}
GROUP BY tb.bldPrdID
ORDER BY tb.buildingName
	</select>
	<update id="updateBigPriceIsSave" parameterType="java.lang.String">
		update fp_designtwo_big_price set isSave=1 where id=#{id}
	</update>
	<select id="getWeiSaveBuildData" resultType="java.util.Map" parameterType="java.lang.String">
		SELECT
	id,
	project_name,
	product_type,
	operation_type,
	building_name,
	level_coefficient,
	operation_coefficient,
	static_coefficient,
	product_price,
	static_price,
	DATE_FORMAT( open_time, '%Y-%m-%d' ) open_time,
	def_week,
	this_building_avg,
	this_pric_week_correction,
	this_building_area,
	this_pric_build_avgprice,
	this_building_raw_avg,
	this_pric_value,
	this_pric_raw_value,
	this_pric_back_raw_value,
	this_pric_back_raw_avg,
	task_kingdee_sell_area,
	task_kingdee_sell_avg,
	task_kingdee_sell_value,
	task_kingdee_not_are,
	task_kingdee_not_avg,
	task_kingdee_not_value,
	task_kingdee_not_area,
	task_kingdee_dynamic_avg,
	task_kingdee_dynamic_value,
	task_kingdee_dynamic_sell
FROM
	fp_designtwo_big_price
WHERE
	plan_node_id =#{plan_node_id} and isSave=1
ORDER BY
	Sort ASC
	</select>
	<!--获取当前计划最新版本的数据-->
	<select id="getNewPlanNodeData" resultType="java.lang.String" parameterType="java.lang.String">
SELECT
	id
FROM
	fp_plan_node
WHERE
	plan_id = #{plan_id}
	AND is_del = 0
	AND node_level = 3
	AND plan_approval = 4
ORDER BY
	create_time DESC
	LIMIT 1
	</select>
</mapper>